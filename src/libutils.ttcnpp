/* -*- c-basic-offset: 4; tab-width: 4; -*- */
/*
 * Copyright Â© 2018-2022, Intel Corporation.
 * SPDX-License-Identifier: LGPL-2.1-only
 */

module libutils {

import from libnet all;

external function u32_pre_inc(inout integer a, integer b := 1) return integer;
external function u32_post_inc(inout integer a, integer b := 1) return integer;

external function fx_ether_ntoa(octetstring addr) return charstring;
external function fx_inet6_ntop(octetstring addr) return charstring;

external function fx_ether_aton(charstring addr) return octetstring;
external function fx_inet_aton(charstring addr) return octetstring;
external function fx_inet6_pton(charstring addr) return octetstring;

external function fx_tcp_csum(inout octetstring data) return integer;
external function fx_inet6_chksum(octetstring data) return integer;

function mask_is_present(bitstring val, bitstring mask) return boolean
{
	if ((val and4b mask) == mask) {
		return true;
	} else {
		return false;
	}
}

function mask_set(inout bitstring val, bitstring mask)
{
	val := val or4b mask;
}

function mask_clear(inout bitstring val, bitstring mask)
{
	val := val and4b (not4b mask);
}

function pre_inc(inout integer i, integer step := 1) return integer
{
	i := i + step;
	return i;
}

function post_inc(inout integer i, integer step := 1) return integer
{
	var integer r := i;
	i := i + step;
	return r;
}

function post_dec(inout integer i, integer step := 1) return integer
{
	var integer r := i;
	i := i - step;
	return r;
}

function byte_array_append(inout octetstring array, octetstring data)
{
	array := array & data;
}

function byte_array_remove_range(inout octetstring array,
								 integer index := 0,
								 integer len := 1) return octetstring
{
	var octetstring data := substr(array, index, len);

	array := replace(array, index, len, ''O);

	return data;
}

function byte_array_new(integer len := 0, octetstring c := '00'O)
	return octetstring
{
	var octetstring array := ''O;

	while (len > 0) {
		array := array & c;
		len := len - 1;
	}

	return array;
}

} /* end of module */
